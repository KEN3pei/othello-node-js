{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport io from 'socket.io-client';\nconst pages = {\n  index: {\n    title: '全てのtodo'\n  },\n  active: {\n    title: '未完了のtodo',\n    completed: false\n  },\n  completed: {\n    title: '完了したtodo',\n    completed: true\n  }\n};\nexport default function Todos(props) {\n  const {\n    title,\n    completed\n  } = pages[props.page];\n  const {\n    0: todos,\n    1: setTodos\n  } = useState([]);\n  const {\n    0: socket,\n    1: setSocket\n  } = useState();\n  let count = 1;\n  useEffect(() => {\n    const socket = io(\"/todos1\");\n    socket.on('todos', todos => {\n      setTodos(typeof completed === 'undefined' ? todos : todos.filter(todo => todo.completed === completed));\n    });\n    setSocket(socket);\n    return () => socket.close();\n  }, [props.page]); // JSX\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: title\n      })\n    }), /*#__PURE__*/_jsx(\"h1\", {\n      children: title\n    }), /*#__PURE__*/_jsx(\"label\", {\n      children: /*#__PURE__*/_jsx(\"input\", {\n        onKeyPress: e => {\n          const title = e.target.value;\n\n          if (e.key !== 'Enter' || !title) {\n            return;\n          }\n\n          e.target.value = '';\n          socket.emit('createTodo', title);\n        }\n      })\n    }), /*#__PURE__*/_jsx(\"ul\", {\n      children: todos.map(({\n        id,\n        title,\n        completed\n      }) => /*#__PURE__*/_jsxs(\"li\", {\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          style: completed ? {\n            textDecoration: 'line-through'\n          } : {},\n          children: [/*#__PURE__*/_jsx(\"input\", {\n            type: \"checkbox\",\n            checked: completed,\n            onChange: e => socket.emit('updateCompleted', id, e.target.checked)\n          }), title]\n        }), /*#__PURE__*/_jsx(\"button\", {\n          onClick: () => socket.emit('deleteTodo', id),\n          children: \"\\u524A\\u9664\"\n        })]\n      }, id))\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/uenokensuke/programming/JS/Nodejs/sample-todo-socket/components/Todos1.js"],"names":["useEffect","useState","Link","Head","io","pages","index","title","active","completed","Todos","props","page","todos","setTodos","socket","setSocket","count","on","filter","todo","close","e","target","value","key","emit","map","id","textDecoration","checked"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GADG;AAEVC,EAAAA,MAAM,EAAE;AAAED,IAAAA,KAAK,EAAE,UAAT;AAAqBE,IAAAA,SAAS,EAAE;AAAhC,GAFE;AAGVA,EAAAA,SAAS,EAAE;AAAEF,IAAAA,KAAK,EAAE,UAAT;AAAqBE,IAAAA,SAAS,EAAE;AAAhC;AAHD,CAAd;AAMA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAChC,QAAM;AAAEJ,IAAAA,KAAF;AAASE,IAAAA;AAAT,MAAuBJ,KAAK,CAACM,KAAK,CAACC,IAAP,CAAlC;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACc,MAAD;AAAA,OAASC;AAAT,MAAsBf,QAAQ,EAApC;AACA,MAAIgB,KAAK,GAAG,CAAZ;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,MAAM,GAAGX,EAAE,CAAC,SAAD,CAAjB;AACAW,IAAAA,MAAM,CAACG,EAAP,CAAU,OAAV,EAAmBL,KAAK,IAAI;AACxBC,MAAAA,QAAQ,CACJ,OAAOL,SAAP,KAAqB,WAArB,GACMI,KADN,GAEMA,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACX,SAAL,KAAmBA,SAAxC,CAHF,CAAR;AAKH,KAND;AAOAO,IAAAA,SAAS,CAACD,MAAD,CAAT;AACA,WAAO,MAAMA,MAAM,CAACM,KAAP,EAAb;AACH,GAXQ,EAWN,CAACV,KAAK,CAACC,IAAP,CAXM,CAAT,CALgC,CAkBhC;;AACA,sBACI;AAAA,4BACA,KAAC,IAAD;AAAA,6BACI;AAAA,kBAAQL;AAAR;AADJ,MADA,eAIA;AAAA,gBAAKA;AAAL,MAJA,eAKA;AAAA,6BACI;AAAO,QAAA,UAAU,EAAEe,CAAC,IAAI;AACpB,gBAAMf,KAAK,GAAGe,CAAC,CAACC,MAAF,CAASC,KAAvB;;AACA,cAAGF,CAAC,CAACG,GAAF,KAAU,OAAV,IAAqB,CAAClB,KAAzB,EAA+B;AAC3B;AACH;;AACDe,UAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiB,EAAjB;AACAT,UAAAA,MAAM,CAACW,IAAP,CAAY,YAAZ,EAA0BnB,KAA1B;AACH;AAPD;AADJ,MALA,eAgBA;AAAA,gBACCM,KAAK,CAACc,GAAN,CAAU,CAAC;AAACC,QAAAA,EAAD;AAAKrB,QAAAA,KAAL;AAAYE,QAAAA;AAAZ,OAAD,kBAEP;AAAA,gCACI;AAAO,UAAA,KAAK,EAAEA,SAAS,GAAG;AAACoB,YAAAA,cAAc,EAAE;AAAjB,WAAH,GAAsC,EAA7D;AAAA,kCACI;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,OAAO,EAAEpB,SAFb;AAGI,YAAA,QAAQ,EAAEa,CAAC,IACPP,MAAM,CAACW,IAAP,CAAY,iBAAZ,EAA+BE,EAA/B,EAAmCN,CAAC,CAACC,MAAF,CAASO,OAA5C;AAJR,YADJ,EAQKvB,KARL;AAAA,UADJ,eAWI;AAAQ,UAAA,OAAO,EAAE,MAAMQ,MAAM,CAACW,IAAP,CAAY,YAAZ,EAA0BE,EAA1B,CAAvB;AAAA;AAAA,UAXJ;AAAA,SAASA,EAAT,CAFH;AADD,MAhBA;AAAA,IADJ;AAuCH","sourcesContent":["import { useEffect, useState } from 'react'\nimport Link from 'next/link'\nimport Head from 'next/head'\nimport io from 'socket.io-client'\n\nconst pages = {\n    index: { title: '全てのtodo'},\n    active: { title: '未完了のtodo', completed: false},\n    completed: { title: '完了したtodo', completed: true}\n}\n\nexport default function Todos(props){\n    const { title, completed } = pages[props.page]\n    const [todos, setTodos] = useState([])\n    const [socket, setSocket] = useState()\n    let count = 1\n    useEffect(() => {\n        const socket = io(\"/todos1\")\n        socket.on('todos', todos => {\n            setTodos(\n                typeof completed === 'undefined'\n                    ? todos\n                    : todos.filter(todo => todo.completed === completed)\n            )\n        })\n        setSocket(socket)\n        return () => socket.close()\n    }, [props.page])\n\n    // JSX\n    return (\n        <>\n        <Head>\n            <title>{title}</title>\n        </Head>\n        <h1>{title}</h1>\n        <label>\n            <input onKeyPress={e => {\n                const title = e.target.value\n                if(e.key !== 'Enter' || !title){\n                    return\n                }\n                e.target.value = ''\n                socket.emit('createTodo', title)\n            }}/>\n        </label>\n        {/* todo一覧 */}\n        <ul>\n        {todos.map(({id, title, completed}) => \n\n            <li key={id}>\n                <label style={completed ? {textDecoration: 'line-through'} : {}}>\n                    <input\n                        type=\"checkbox\" \n                        checked={completed}\n                        onChange={e => \n                            socket.emit('updateCompleted', id, e.target.checked)\n                        }\n                    />\n                    {title}\n                </label>\n                <button onClick={() => socket.emit('deleteTodo', id)}>削除</button>\n            </li>\n\n        )}\n        </ul>\n        {/* <div>{pageLinks}</div> */}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}