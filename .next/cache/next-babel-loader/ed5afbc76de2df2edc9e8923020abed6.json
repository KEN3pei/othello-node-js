{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport io from 'socket.io-client';\nvar pages = {\n  index: {\n    title: '全てのtodo'\n  },\n  active: {\n    title: '未完了のtodo',\n    completed: false\n  },\n  completed: {\n    title: '完了したtodo',\n    completed: true\n  }\n};\nexport default function Todos(props) {\n  _s();\n\n  var _pages$props$page = pages[props.page],\n      title = _pages$props$page.title,\n      completed = _pages$props$page.completed;\n\n  var _useState = useState([]),\n      todos = _useState[0],\n      setTodos = _useState[1];\n\n  var _useState2 = useState(),\n      socket = _useState2[0],\n      setSocket = _useState2[1];\n\n  var count = 1;\n  useEffect(function () {\n    count++;\n    var room = count % 2 === 0 ? \"/todos1\" : \"/todos2\";\n    var socket = io(room);\n    socket.on('todos', function (todos) {\n      setTodos(typeof completed === 'undefined' ? todos : todos.filter(function (todo) {\n        return todo.completed === completed;\n      }));\n    });\n    setSocket(socket);\n    return function () {\n      return socket.close();\n    };\n  }, [props.page]); // JSX\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: title\n      })\n    }), /*#__PURE__*/_jsx(\"h1\", {\n      children: title\n    }), /*#__PURE__*/_jsx(\"label\", {\n      children: /*#__PURE__*/_jsx(\"input\", {\n        onKeyPress: function onKeyPress(e) {\n          var title = e.target.value;\n\n          if (e.key !== 'Enter' || !title) {\n            return;\n          }\n\n          e.target.value = '';\n          socket.emit('createTodo', title);\n        }\n      })\n    }), /*#__PURE__*/_jsx(\"ul\", {\n      children: todos.map(function (_ref) {\n        var id = _ref.id,\n            title = _ref.title,\n            completed = _ref.completed;\n        return /*#__PURE__*/_jsxs(\"li\", {\n          children: [/*#__PURE__*/_jsxs(\"label\", {\n            style: completed ? {\n              textDecoration: 'line-through'\n            } : {},\n            children: [/*#__PURE__*/_jsx(\"input\", {\n              type: \"checkbox\",\n              checked: completed,\n              onChange: function onChange(e) {\n                return socket.emit('updateCompleted', id, e.target.checked);\n              }\n            }), title]\n          }), /*#__PURE__*/_jsx(\"button\", {\n            onClick: function onClick() {\n              return socket.emit('deleteTodo', id);\n            },\n            children: \"\\u524A\\u9664\"\n          })]\n        }, id);\n      })\n    })]\n  });\n}\n\n_s(Todos, \"3A5vuZwhNiK5sEp62o1HxwTagQA=\");\n\n_c = Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/Users/uenokensuke/programming/JS/Nodejs/sample-todo-socket/components/Todos1.js"],"names":["useEffect","useState","Link","Head","io","pages","index","title","active","completed","Todos","props","page","todos","setTodos","socket","setSocket","count","room","on","filter","todo","close","e","target","value","key","emit","map","id","textDecoration","checked"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport Link from 'next/link'\nimport Head from 'next/head'\nimport io from 'socket.io-client'\n\nconst pages = {\n    index: { title: '全てのtodo'},\n    active: { title: '未完了のtodo', completed: false},\n    completed: { title: '完了したtodo', completed: true}\n}\n\nexport default function Todos(props){\n    const { title, completed } = pages[props.page]\n    const [todos, setTodos] = useState([])\n    const [socket, setSocket] = useState()\n    let count = 1\n    useEffect(() => {\n        count++\n        const room = count%2 === 0 ? \"/todos1\" : \"/todos2\"\n        const socket = io(room)\n        socket.on('todos', todos => {\n            setTodos(\n                typeof completed === 'undefined'\n                    ? todos\n                    : todos.filter(todo => todo.completed === completed)\n            )\n        })\n        setSocket(socket)\n        return () => socket.close()\n    }, [props.page])\n\n    // JSX\n    return (\n        <>\n        <Head>\n            <title>{title}</title>\n        </Head>\n        <h1>{title}</h1>\n        <label>\n            <input onKeyPress={e => {\n                const title = e.target.value\n                if(e.key !== 'Enter' || !title){\n                    return\n                }\n                e.target.value = ''\n                socket.emit('createTodo', title)\n            }}/>\n        </label>\n        {/* todo一覧 */}\n        <ul>\n        {todos.map(({id, title, completed}) => \n\n            <li key={id}>\n                <label style={completed ? {textDecoration: 'line-through'} : {}}>\n                    <input\n                        type=\"checkbox\" \n                        checked={completed}\n                        onChange={e => \n                            socket.emit('updateCompleted', id, e.target.checked)\n                        }\n                    />\n                    {title}\n                </label>\n                <button onClick={() => socket.emit('deleteTodo', id)}>削除</button>\n            </li>\n\n        )}\n        </ul>\n        {/* <div>{pageLinks}</div> */}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}